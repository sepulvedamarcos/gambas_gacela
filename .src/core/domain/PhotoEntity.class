' Gambas class file

'
' Gambas class file - PhotoEntity
' Modelo de dominio para representar una foto en Gacela
'

' Propiedades privadas del modelo
Private $id As Integer = 0
Private $fileName As String = ""
Private $widthPixels As Integer = 0
Private $heightPixels As Integer = 0
Private $creationDate As Date
Private $importDate As Date
Private $description As String = ""
Private $stars As Integer = 0
Private $importUser As String = ""
Private $imagePath As String = ""
Private $hash256 As String = ""
Private $thumbnail As String
Private $lastSyncDate As Date
Private $syncStatus As String = "pending"
Private $softDelete As Boolean = False
Private $softDeleteDate As Date
Private $softDeleteBy As String = ""
Private $softDeleteAuto As Date
Private $isLocked As Boolean = False
Private $lockedBy As String = ""
Private $lockReason As String = ""
' =============================================
'
'            PROPIEDADES PÚBLICAS
'
'==============================================
Property Id As Integer                    '' ID único de la foto
Property FileName As String               '' Nombre del archivo original
Property WidthPixels As Integer           '' Ancho en píxeles
Property HeightPixels As Integer          '' Alto en píxeles
Property CreationDate As Date             '' Fecha de creación de la foto (desde metadatos EXIF)
Property ImportDate As Date               '' Fecha de importación a Gacela
Property Description As String            '' Descripción de la foto
Property Stars As Integer                 '' Indicador de estrellas de la foto
Property ImportUser As String             '' Usuario que importó la foto
Property ImagePath As String              '' Ruta de acceso a la imagen fisica
Property Hash256 As String                '' Acceso al hash de la imagen que la hace unica
Property Thumbnail As String              '' Miniatura
Property LastSyncDate As Date             '' Ultima fecha de sincronizacion
Property SyncStatus As String             '' Estado de la sincronizacion
Property SoftDelete As Boolean            '' Indicador para saber si fue borrada
Property SoftDeleteDate As Date           '' Fecha de la accion de borrado
Property SoftDeleteBy As String           '' Usuario que ejecuto la accion de borrado
Property SoftDeleteAuto As Date           '' Fecha en que se eliminara de la bandeja de eliminacion
Property IsLocked As Boolean              '' Indicador para saber si la imagen esta bloquedad para eliminacion
Property LockedBy As String               '' Usuario que realiza la accion de bloqueo
Property Lockreason As String             '' Razon del bloqueo de la imagen
Property Read HasThumbnail As Boolean     '' Indicador para saber si tiene miniatura
'=================================================
'
'        Getters and Setters
'
'=================================================

Function Id_Read() As Integer

  Return $id

End

Sub Id_Write(value As Integer)

  $id = value

End

Function FileName_Read() As String

  Return $fileName

End

Sub FileName_Write(value As String)

  $fileName = value

End

Function WidthPixels_Read() As Integer

  Return $widthPixels

End

Sub WidthPixels_Write(value As Integer)

  $widthPixels = value

End

Function HeightPixels_Read() As Integer

  Return $heightPixels

End

Sub HeightPixels_Write(value As Integer)

  $heightPixels = value

End

Function CreationDate_Read() As Date

  Return $creationDate

End

Sub CreationDate_Write(value As Date)

  $creationDate = value

End

Function ImportDate_Read() As Date

  Return $importDate

End

Sub ImportDate_Write(value As Date)

  $importDate = value

End

Function LastSyncDate_Read() As Date

  Return $lastSyncDate

End

Sub LastSyncDate_Write(LastSync As Date)

  $lastSyncDate = LastSync

End

Function Description_Read() As String

  Return $description

End

Sub Description_Write(value As String)

  $description = value

End

Function ImportUser_Read() As String

  Return $importUser

End

Sub ImportUser_Write(value As String)

  $importUser = value

End

Function SoftDelete_Read() As Boolean

  Return $softDelete

End

Sub SoftDelete_Write(value As Boolean)

  $SoftDelete = value

End

Function Thumbnail_Read() As String

  Return $thumbnail

End

Sub Thumbnail_Write(value As String)

  $thumbnail = value

End

Function HasThumbnail_Read() As Boolean

  Return $thumbnail <> Null And $thumbnail.Len > 0

End

Private Function Stars_Read() As Integer

  Return $stars

End

Private Sub Stars_Write(Value As Integer)

  $stars = value

End

Private Function ImagePath_Read() As String

  Return $imagePath

End

Private Sub ImagePath_Write(Value As String)

  $imagePath = value

End

Private Function Hash256_Read() As String

  Return $hash256

End

Private Sub Hash256_Write(Value As String)

  $hash256 = value

End

Private Function SyncStatus_Read() As String

  Return $syncStatus

End

Private Sub SyncStatus_Write(Value As String)

  $syncStatus = value

End

Private Function SoftDeleteDate_Read() As Date

  Return $softDeleteDate

End

Private Sub SoftDeleteDate_Write(Value As Date)

  $softDeleteDate = value

End

Private Function SoftDeleteBy_Read() As String

  Return $softDeleteBy

End

Private Sub SoftDeleteBy_Write(Value As String)

  $softDeleteBy = value

End

Private Function SoftDeleteAuto_Read() As Date

  Return $softDeleteAuto

End

Private Sub SoftDeleteAuto_Write(Value As Date)

  $softDeleteAuto = value

End

Private Function IsLocked_Read() As Boolean

  Return $isLocked

End

Private Sub IsLocked_Write(Value As Boolean)

  $isLocked = value

End

Private Function LockedBy_Read() As String

  Return $lockedBy

End

Private Sub LockedBy_Write(Value As String)

  $lockedBy = value

End

Private Function Lockreason_Read() As String

  Return $lockReason

End

Private Sub Lockreason_Write(Value As String)

  $lockReason = value

End
