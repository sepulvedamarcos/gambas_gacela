' Gambas class file

' Clase Configuration - Gacela
' Maneja la configuración de la aplicación usando Settings de Gambas

' Constantes que definen la sección de Settings globales
Private Const GLOBAL_VERSION As String = "Global/Version"
Private Const GLOBAL_LIBRARY_TYPE As String = "Global/LibraryType"
Private Const GLOBAL_LIBRARY_DIRECTORY As String = "Global/LibraryDirectory"
Private Const GLOBAL_LIBRARY_PHOTOS_PER_VIEW As String = "Global/PhotosPerView"
Private Const GLOBAL_APPLICATION_THEME As String = "Global/Theme"

' Constantes que definen la seccion de Log4Gambas
Private Const LOG4GAMBAS_LEVEL As String = "Log4Gambas/Level"
Private Const LOG4GAMBAS_OUTPUT As String = "Log4Gambas/Output"
Private Const LOG4GAMBAS_MAXFILES As String = "Log4Gambas/MaxFiles"
Private Const LOG4GAMBAS_SIZELOG As String = "Log4Gambas/SizeLog"
Private Const LOG4GAMBAS_LOGFILE As String = "Log4Gambas/LogFile"
Private Const LOG4GAMBAS_MAXFILESIZE As String = "Log4Gambas/MaxFilesSize"

' Variable privadas
Private $settings As Settings                                                 '' Objeto que referencia al archivo de settings
Private $isFirstRun As Boolean = False                                        '' Indicador de primera ejecucion
Private $whichLibrary As Integer = Enumeration.LibraryType_Private            '' Indicador de tipo de libreria activa
Private $appPath As String                                                    '' Ruta de los archivos de la aplicación
Private $log4gambas As New Log4Gambas3                                        '' Objeto para hacer logger
Private $soTheme As Integer                                                   '' Indica el tema activo del SO
Private $appTheme As Integer                                                  '' Indica el tema que usa la aplicacion
Private $libraryName As String                                                '' Nombre de la libreria

' Propiedades
Property Read IsFirstRun As Boolean                                           '' Indicador de primera ejecución
Property Read LibraryPath As String                                           '' Entrega path a la biblioteca actualmente activa
Property Read whichLibrary As Integer                                         '' Entrega indicador de biblioteca seleccionada por el usuario
Property Read IsSharedLibraryAvailable As Boolean                              '' Indicador de biblioteca compartida disponible para trabajar

'============================================
'
'      Métodos publicos
'
'============================================
Public Sub _new()

  ' Cargamos la ruta de la bilioteca privada como valor inicial y detectar primera vez
  $appPath = User.Home &/ Constants.GACELA_DIRECTORY
  'Revisamos cual es el tema definido por el sistema operativo
  $soTheme = FindSOTheme()

  $settings = New Settings($appPath &/ Constants.CONFIG_NAME)
  If $settings.Count = 0 Then
    'Cargamos variable para indicar que es primera vez que se ingresa
    $isFirstRun = True
    'Inicializamos el arvhivo settings
    FirstInitializeSettings()
    'Inicializamos la seccion Log4Gambas
    FirstInitializeLogger()

    $log4Gambas.Info("Se detecto que es el primer inicio. Se configurara la aplicacion privada y se detectara el sector compartido")
  Endif

Catch
  $log4gambas.Error("Error inicializando configuración: " & Error.Text)
  Error.Raise("Error inicializando configuración: " & Error.Text)

End

Public Sub InitializeEnvironment() ''Carga ambiente  definido en la configuracion

  $log4gambas.info("Inicializando entorno")

  If $settings[GLOBAL_LIBRARY_TYPE, Null] = Null Then
    Error.Raise("Problemas al cargar configuraciones iniciales")
  Else
    $whichLibrary = $settings[GLOBAL_LIBRARY_TYPE]
    $appTheme = $settings[GLOBAL_APPLICATION_THEME, Enumeration.APP_THEME_SO]
  Endif

End

Public Function InitializeLogger() As Log4Gambas3

  $log4gambas.warning("creando archivo ini con datos del log4gambas3")
  ' configuramos el logger
  $log4gambas.SetAppName(Application.Name)
  $log4gambas.SetMinLevel($settings[LOG4GAMBAS_LEVEL, $log4gambas.LEVEL_DEBUG])
  $log4gambas.SetOutput($settings[LOG4GAMBAS_OUTPUT, $log4gambas.OUTPUT_CONSOLE])
  $log4gambas.SetLogFile($settings[LOG4GAMBAS_LOGFILE, $log4gambas.GetLogFile()])
  $log4gambas.SetMaxFileSize($settings[LOG4GAMBAS_MAXFILESIZE, $log4gambas.GetMaxFileSize()])
  $log4gambas.SetMaxFiles($settings[LOG4GAMBAS_MAXFILES, $log4gambas.GetMaxFiles()])

  Return $log4gambas

End

Public Sub SetWichLibrary(value As Integer)

  $whichLibrary = Value
  $settings[GLOBAL_LIBRARY_TYPE] = value
  $settings.Save

End

'================================================
'
'         Métodos privados
'
'================================================
Private Sub FirstInitializeSettings() ''Creacion de configuraciones iniciales

  $log4gambas.info("creando archivo ini con datos iniciales")

  ' Verificamos que exista el archivo de Settings
  If Not Exist($appPath &/ Constants.CONFIG_NAME) Then
    If Not Exist($appPath) Then
      Mkdir $appPath
    Endif
  Endif

  ' Sección Global
  $settings[GLOBAL_VERSION] = Application.Version
  $settings[GLOBAL_LIBRARY_TYPE] = Enumeration.LibraryType_Private
  $settings[GLOBAL_LIBRARY_TYPE] = Me.whichLibrary
  $settings[GLOBAL_APPLICATION_THEME] = $soTheme
  $settings.Save()

Catch
  $log4gambas.Error("Error detectado al intentar crear directorio de archivo settings" & Error.Text)
  Error.Raise("Error detectado al intentar crear directorio de archivo settings" & Error.Text)

End

Private Function FirstInitializeLogger() As Log4Gambas3

  $log4gambas.info("creando logger con datos iniciales")

  $settings[LOG4GAMBAS_LEVEL] = $log4gambas.GetMinLevel()
  $settings[LOG4GAMBAS_OUTPUT] = $log4gambas.GetOutput()
  $settings[LOG4GAMBAS_LOGFILE] = $appPath
  $settings[LOG4GAMBAS_MAXFILESIZE] = $log4gambas.GetMaxFileSize()
  $settings[LOG4GAMBAS_MAXFILES] = $log4gambas.GetMaxFiles()
  $settings.Save()

End

Private Function FindSOTheme() As Integer

  Dim bgColor As Integer = Color.Background
  Dim brightness As Float
  Dim r, g, b As Integer

  ' Extraer componentes RGB
  r = Color[bgColor].Red
  g = Color[bgColor].Green
  b = Color[bgColor].Blue

  ' Calcular brillo (luminosidad)
  brightness = (r * 0.299 + g * 0.587 + b * 0.114)

  ' Si el brillo es menor a 128, es tema oscuro
  If brightness < 128 Then
    Return Enumeration.APP_THEME_DARK
  Else
    Return Enumeration.APP_THEME_LIGHT
  Endif

  Return 0

End

' =======================================================
'
'       Métodos para las propiedades públicas
'
' =======================================================
Function IsFirstRun_Read() As Boolean

  Return $isFirstRun

End

Private Function whichLibrary_Read() As Integer

  Return $whichLibrary

End

Private Function LibraryPath_Read() As String

  If $whichLibrary = Enumeration.LibraryType_Private Then
    Return $appPath
  Else
    Return Constants.GACELA_DIRECTORY_SHARED
  Endif

End

Function IsSharedLibraryAvailable_Read() As Boolean

  Dim hasGroup As Boolean
  Dim hasDirectory As Boolean
  Dim hasPermissions As Boolean
  Dim groupAvailable As String

  ' Verificar que existe el grupo
  Shell "getent group " & Constants.GRUPO_GACELA To groupAvailable
  If groupAvailable = "" Then
    Return False
  Endif

  ' Verificar que el usuario esta en el grupo
  If InStr(groupAvailable, User.Name) <= 0 Then
    Return False
  Endif

  ' Verificar que existe el directorio
  If Not Exist(Constants.GACELA_DIRECTORY_SHARED) Then
    Return False
  Endif

  ' Verificar permisos de escritura
  If Exist(Constants.GACELA_DIRECTORY_SHARED) Then
    Try File.Save(Constants.GACELA_DIRECTORY_SHARED &/ ".test", "test")
    If Error Then Return False
    Try Kill Constants.GACELA_DIRECTORY_SHARED &/ ".test"
  Endif

  'sudo Chown -R root:gacela - users/usr/share/gacela && \
  'sudo Chmod 755 /usr/share/gacela && \
  'sudo Chmod -R 775 /usr/share/gacela/biblioteca && \
  'sudo find /usr/share/gacela/biblioteca -type d -exec Chmod g+s {} \; && \
  'echo "Permisos configurados correctamente"

  Return True

End
